Return-Path: <linux-man-owner@vger.kernel.org>
X-Original-To: lists+linux-man@lfdr.de
Delivered-To: lists+linux-man@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 34A9F6829E0
	for <lists+linux-man@lfdr.de>; Tue, 31 Jan 2023 11:03:33 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229680AbjAaKDb (ORCPT <rfc822;lists+linux-man@lfdr.de>);
        Tue, 31 Jan 2023 05:03:31 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34626 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230091AbjAaKD2 (ORCPT
        <rfc822;linux-man@vger.kernel.org>); Tue, 31 Jan 2023 05:03:28 -0500
Received: from mail-yw1-x1129.google.com (mail-yw1-x1129.google.com [IPv6:2607:f8b0:4864:20::1129])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 3C733234F9
        for <linux-man@vger.kernel.org>; Tue, 31 Jan 2023 02:03:26 -0800 (PST)
Received: by mail-yw1-x1129.google.com with SMTP id 00721157ae682-501c3a414acso196249157b3.7
        for <linux-man@vger.kernel.org>; Tue, 31 Jan 2023 02:03:26 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=cc:to:subject:message-id:date:from:mime-version:from:to:cc:subject
         :date:message-id:reply-to;
        bh=8ma5RZv16KlXjhX0aLLkp3Oag3AFQ1AJajJ87o/Y9ms=;
        b=mjt4akUXxiyxGQbM72KkaBGXlkL7TnWLK8a9iKoNct9BoJk/wFCM2H+chfWfG14/vP
         NlTqpIt3UlPykt/dR/uL+3HCpnnWxWqIt6Sy6Mo7WHTQlQVW2b08DNEaPy8HQ+lbY1O4
         QIsoj4GBje/Em4SYN/UhaQJ2KhSAIx+siYVp4iGzDHvaQYIlO2QNI+U+O/QKNGpIu7qQ
         yfBQOPW1ZzXVWbi3ELyef4iVa4d5X7ZOwt/UQ4Lk5FzM3Aelm/3WMJ2Wh6Eg4ndbxwBG
         QE5KNtlneQ6Tn6feS0c6XDabqfiZPgmkSS1zUHIjBK1RnLOyao37xDm3Ju22NPgyLuTr
         6ZMQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=cc:to:subject:message-id:date:from:mime-version:x-gm-message-state
         :from:to:cc:subject:date:message-id:reply-to;
        bh=8ma5RZv16KlXjhX0aLLkp3Oag3AFQ1AJajJ87o/Y9ms=;
        b=tU2GJCXC5gQdmpc0Vao1B+3K8H1gxQMbvzbOponhz9N4NqLstdNOFNbAv8e8HyC4hH
         mM1BFA3OzBRmCPS0NVc4BlVo7IBLcML6wOevoZAlsK/wi8s9hsyFIaYhObti4uEoRR+D
         Arkk0LGoxrLS0Ps/433OqknQtIfU4PBzKLdLOWA3tb06xN7vPk30iBu4Ld36S4nOtxvX
         RBJB+lkpyQE4p7rCpJzJhFqBXj7/pgtU4YT0DMEeJWzdgTD8kn3hVSgWuFQvyiyi8KHS
         lMLAFDRgguJw0xGKckvfw5h3nQZlM4MT7xHTSN4lsQuLEOs3iAluwc+IXBfUTNu+rwmQ
         gw/g==
X-Gm-Message-State: AO0yUKW1T7okLVYVFPaABwChK70C3qABqdf9p/xQxPL1v/SLZehakxZH
        +Ybk+ErfUQu15rsokLeAMkQtljuEitgzEVVjtWq/YfOkO84=
X-Google-Smtp-Source: AK7set8XKwMy/j/6vH0ttYKngYzBQydqK6nRGS02OoZtzMt7izoDSvKiTH3MRpH4X31KoJECkwvl/UcxCEq0JodZ0Ck=
X-Received: by 2002:a81:af66:0:b0:506:6130:258e with SMTP id
 x38-20020a81af66000000b005066130258emr2677213ywj.346.1675159405496; Tue, 31
 Jan 2023 02:03:25 -0800 (PST)
MIME-Version: 1.0
From:   Zexuan Luo <spacewanderlzx@gmail.com>
Date:   Tue, 31 Jan 2023 18:03:15 +0800
Message-ID: <CAADJU1032g+sNGN9AZKeVuMzZywXZ0BWpm3592XcGJdp4goCUQ@mail.gmail.com>
Subject: Typo in the man7 bpf-helpers page
To:     Alejandro Colomar <alx@kernel.org>
Cc:     linux-man@vger.kernel.org
Content-Type: text/plain; charset="UTF-8"
X-Spam-Status: No, score=-2.1 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,FREEMAIL_FROM,
        RCVD_IN_DNSWL_NONE,SPF_HELO_NONE,SPF_PASS autolearn=ham
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-man.vger.kernel.org>
X-Mailing-List: linux-man@vger.kernel.org

Hello Colomar,

I just found a potential bug in the bpf-helpers page.

Under the https://www.man7.org/linux/man-pages/man7/bpf-helpers.7.html:

```
       u64 bpf_get_socket_cookie(struct sk_buff *skb)

              Description
                     If the struct sk_buff pointed by skb has a known
                     socket, retrieve the cookie (generated by the
                     kernel) of this socket.  If no cookie has been set
                     yet, generate a new cookie. Once generated, the
                     socket cookie remains stable for the life of the
                     socket. This helper can be useful for monitoring
                     per socket networking traffic statistics as it
                     provides a global socket identifier that can be
                     assumed unique.

              Return A 8-byte long non-decreasing number on success, or
                     0 if the socket field is missing inside skb.

       u64 bpf_get_socket_cookie(struct bpf_sock_addr *ctx)

              Description
                     Equivalent to bpf_get_socket_cookie() helper that
                     accepts skb, but gets socket from struct
                     bpf_sock_addr context.

              Return A 8-byte long non-decreasing number.

       u64 bpf_get_socket_cookie(struct bpf_sock_ops *ctx)

              Description
                     Equivalent to bpf_get_socket_cookie() helper that
                     accepts skb, but gets socket from struct
                     bpf_sock_ops context.

              Return A 8-byte long non-decreasing number.
```

The function bpf_get_socket_cookie repeats three times. The second one
should be bpf_get_socket_cookie_addr and the third one should be
bpf_get_socket_cookie_ops.
